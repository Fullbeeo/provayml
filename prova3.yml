# 1. Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: wp-namespace
---
# 2. Persistent Volume per WordPress (PV sono risorse cluster-wide)
apiVersion: v1
kind: PersistentVolume
metadata:
  name: wp-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/wp
---
# 3. Persistent Volume Claim per WordPress
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pvc
  namespace: wp-namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# 4. Deployment per WordPress
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: wp-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
        - name: wordpress
          image: wordpress:latest
          ports:
            - containerPort: 80
          env:
            - name: WORDPRESS_DB_HOST
              value: mysql-service  # match your MySQL Service name
            - name: WORDPRESS_DB_USER
              value: admin
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
            # Optional but recommended (WordPress defaults to "wordpress" if not specified)
            # - name: WORDPRESS_DB_NAME
            #   value: "wordpress"
          volumeMounts:
            - name: wp-storage
              mountPath: /var/www/html
      volumes:
        - name: wp-storage
          persistentVolumeClaim:
            claimName: wp-pvc
---
# 5. Service per WordPress
apiVersion: v1
kind: Service
metadata:
  name: wordpress-service        # nome del Service
  namespace: wp-namespace        # namespace in cui il Service viene creato
spec:
  selector:
    app: wordpress               # collega il Service ai pod che hanno label: app=wordpress
  ports:
  - port: 80                     # porta esposta dal Service internamente nel cluster
    targetPort: 80               # porta su cui i pod stanno realmente ascoltando             # porta esposta esternamente sui nodi (opzionale, altrimenti scelta automaticamente)
  type: LoadBalancer                 # modalit√† di esposizione del Service

---
# 6. Secret per la password di root di MySQL
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: wp-namespace
type: Opaque
data:
  # La password "mypassword" codificata in base64 (echo -n "mypassword" | base64)
  mysql-root-password: bXlwYXNzd29yZA==
---
# 7. Persistent Volume per MySQL
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/mysql
---
# 8. Persistent Volume Claim per MySQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: wp-namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
############## DEPLOYMENT MYSQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: wp-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
            # - name: MYSQL_ROOT_HOST
            #   value: mysql-service
            - name: MYSQL_DATABASE
              value: wordpress
            - name: MYSQL_USER
              value: admin
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1"
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
# 10. Service per MySQL
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: wp-namespace
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306
  clusterIP: None



